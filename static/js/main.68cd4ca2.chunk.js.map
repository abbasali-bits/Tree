{"version":3,"sources":["components/description.js","components/children.jsx","components/node.js","components/AddNodeForm.jsx","reducers/isLogged.js","reducers/index.js","store.js","components/googleBtn.jsx","App.js","serviceWorker.js","index.js"],"names":["Description","listOfComponents","this","props","list","map","n","type","text","Component","Children","listOfNodes","className","onClick","openNode","id","title","Node","node","body","childNodes","description","AddNewNode","handleTitleChange","event","setState","target","value","handleBodyChange","state","onChange","handleAddNodeSubmit","loggedReducer","isLoggedIn","action","emailId","payload","name","allReducers","combineReducers","isLogged","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","CLIENT_ID","GoogleBtn","isLogined","getState","accessToken","console","log","login","bind","handleLoginFailure","logout","handleLogoutFailure","response","profileObj","dispatch","alert","clientId","buttonText","onLogoutSuccess","onFailure","onSuccess","cookiePolicy","responseType","App","fun","subscribe","addNodeOn","allNodes","relations","children","currentNodeId","parentNode","parent","currentNode","openParentNode","length","nodes","push","toggleAddNodeOn","getLoginButton","responseGoogle","getBasicProfile","getEmail","isLoaded","fetch","then","res","json","style","margin","addNewNode","getAddNodeComponent","Boolean","window","location","hostname","match","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.68cd4ca2.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nexport class Description extends Component{\n\n\trender(){\n\t\tconst {list} = this.props; \n\t\tvar listOfComponents = list.map((n)=>{\n\t\t\t\t\t\t\t\t\t\t\t\treturn n.type === 'T'?<h3>{n.text}</h3>: <p>{n.text}</p>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t); \n\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t{listOfComponents}\n\t\t\t\t</div>\n\t\t\t);\n\t}\n}\n","import React, {Component} from 'react';\n\nexport class Children extends Component{\n\n\trender(){\n\t\tconst {listOfNodes} = this.props; \n\t\tvar listOfComponents = listOfNodes.map((n)=>{\n\t\t\t\t\t\t\t\t\t\t\t\treturn <li className=\"col-6 col-md-4\" onClick = {() => this.props.openNode(n.id)}>{n.title}</li>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t); \n\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h5>Children nodes</h5>\n\t\t\t\t\t<ul className = \"row\">\n\t\t\t\t\t\t{listOfComponents}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t);\n\t}\n}\n","import React, {Component} from 'react';\nimport {Description} from './description';\nimport {Children} from './children';\n\nclass Node extends Component{\n\n\trender(){\n\t\tconst {title,body} = this.props.node;\n\t\tconst {childNodes,openNode} = this.props;\n\t\treturn (\n\t\t\t\t<div>\n\n\t\t\t\t\t<h1>{title}</h1>\n\t\t\t\t\t<Description list = {body.description}/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Children listOfNodes = {childNodes} openNode = {openNode}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nexport default Node;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nclass AddNewNode extends Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttitle: \"\",\n\t\t\tbody: \"\"\n\t\t};\n\t}\n\thandleTitleChange= (event)=> {\n\t\t\tthis.setState({\n\t\t\t\ttitle: event.target.value \n\t\t\t});\n\t}\n\thandleBodyChange= (event)=> {\n\t\t\tthis.setState({\n\t\t\t\tbody: event.target.value \n\t\t\t});\n\t}\n\trender(){\n\t\t\n\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t<form>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label>\"Title\"</label>\n\t\t\t\t\t \t<input type=\"text\" value = {this.state.title} onChange = {this.handleTitleChange}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label>\"Body\"</label>\n\t\t\t\t\t \t<textarea type=\"text\" value = {this.state.body} onChange = {this.handleBodyChange}/>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\t\t \n\t\t\t\t\t\t<button onClick = {() => this.props.handleAddNodeSubmit(this.state)}>submit </button> \n\t\t\t\n\n\t\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nexport default AddNewNode;","const loggedReducer = (state = {isLoggedIn: false}, action) => {\n\tswitch(action.type){\n\t\tcase 'SIGN_IN':\n\t\t\treturn {\n\t\t\t\temailId: action.payload.emailId,\n\t\t\t\tname : action.payload.name,\n\t\t\t\tisLoggedIn: true\n\t\t\t};\n\t\tcase 'SIGN_OUT':\n\t\t\treturn {\n\t\t\t\temailId: action.payload.emailId,\n\t\t\t\tisLoggedIn: false\n\t\t\t};\n\t\t\n\t\tdefault :\n\t\t\treturn state;\n\t}\n}\nexport default loggedReducer; ","import loggedReducer from './isLogged';\n\nimport {combineReducers} from 'redux';\n\nconst allReducers = combineReducers({\n\tisLogged: loggedReducer\n});\n\nexport default allReducers;","import {createStore} from 'redux';\nimport allReducers from './reducers'\n// const store = createStore(allReducers,\n// \twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n \n \nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n \nconst persistedReducer = persistReducer(persistConfig, allReducers);\nexport const store = createStore(persistedReducer);\nexport const persistor = persistStore(store);","\nimport React, { Component } from 'react'\nimport ReactDOM from 'react-dom';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport {useDispatch} from 'react-redux';\nimport {login} from '../actions'\nimport {store,persistor} from '../store'\nconst CLIENT_ID = '1084512785168-9no6rgfvkralio08vd4k36fvc5c0gnsp.apps.googleusercontent.com';\n\n\nclass GoogleBtn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLogined: store.getState().isLogged.isLoggedIn,\n      accessToken: store.getState().isLogged.name,\n      store : store\n    };\n    console.log(store.getState());\n    this.login = this.login.bind(this);\n    this.handleLoginFailure = this.handleLoginFailure.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\n  }\n\n  login (response) {\n    console.log(response);\n    console.log(response.accessToken);\n    if(response){\n      this.setState(state => ({\n        isLogined: true,\n        accessToken: response.profileObj.name\n      }));\n    }\n    console.log(this.state.store);\n    store.dispatch({\n        type: 'SIGN_IN',\n        payload: {\n          emailId: 'gmail2',\n          name : response.profileObj.name,\n        }\n      });\n  }\n\n  logout (response) {\n    this.setState(state => ({\n      isLogined: false,\n      accessToken: ''\n    }));\n    this.state.store.dispatch({\n        type: 'SIGN_OUT',\n        payload: {\n          emailId: 'gmail3'\n        }\n      });\n  }\n\n  handleLoginFailure (response) {\n    alert('Failed to log in')\n  }\n\n  handleLogoutFailure (response) {\n    alert('Failed to log out')\n  }\n\n  render() {\n    return (\n    <div>\n      { this.state.isLogined ?\n        <GoogleLogout\n          clientId={ CLIENT_ID }\n          buttonText= 'Logout'\n          onLogoutSuccess={ this.logout }\n          onFailure={ this.handleLogoutFailure }\n        >\n        </GoogleLogout>: \n        <GoogleLogin\n          clientId={CLIENT_ID}\n          buttonText='Login'\n          onSuccess={ this.login }\n          onFailure={ this.handleLoginFailure }\n          cookiePolicy={ 'single_host_origin' }\n          responseType='code,token'\n        />\n      }\n\n      { this.state.accessToken ? <h5>Welcome { this.state.accessToken }</h5> : null }\n\n    </div>\n    )\n  }\n}\n\nexport default GoogleBtn;","import React, {Component} from 'react';\nimport Node from './components/node';\nimport AddNewNode from './components/AddNodeForm';\nimport GoogleBtn from './components/googleBtn'\nimport {GoogleLogin,GoogleLogout} from 'react-google-login';\nimport {useSelector} from 'react-redux';\nimport {store,persistor} from './store'\nclass App extends Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      isLoaded : false,\n      allNodes: [],\n      currentNodeId : 0,\n      currentNode : {},\n      childNodes : [],\n      parentNode : -1,\n      addNodeOn: false,\n      isLoggedIn: store.getState().isLogged.isLoggedIn,\n      store: store\n    }\n  }\n\n  fun = store.subscribe(()=>{\n    console.log(\"subscribing\");\n    this.setState({\n      isLoggedIn: store.getState().isLogged.isLoggedIn\n    });\n  });\n  openNode = id => {\n    if(id<0){\n      this.setState({\n        addNodeOn:false\n      });\n      return;\n    }\n    var children = this.state.allNodes[id].relations[0].children;  \n    var childNodes = children.map((id)=> {\n              return {\n                      \"id\" : id,\n                      \"title\": this.state.allNodes[id].title\n                    }\n                  });\n    this.setState({\n        currentNodeId: id,\n        parentNode: this.state.allNodes[id].parent,\n        currentNode: this.state.allNodes[id],\n        childNodes : childNodes,\n        addNodeOn: false\n    });\n  }\n\n  openParentNode = () => {\n    this.openNode(this.state.parentNode);\n  }\n  handleAddNodeSubmit = state => {\n    var node = {\n      \"id\":this.state.allNodes.length,\n      \"body\":{\"description\":[{\"text\":state.title,\"type\":\"T\"},{\"text\":state.body,\"type\":\"P\"}]},\"title\":state.title,\"parent\":this.state.currentNodeId,\"relations\":[{\"children\":[]}]};\n    var nodes = this.state.allNodes;\n    nodes.push(node);\n    nodes[node.parent].relations[0].children.push(node.id);\n    this.setState({\n      allNodes: nodes,\n      addNodeOn: !this.state.addNodeOn\n    });\n    this.openNode(this.state.currentNodeId);\n    console.log(nodes);\n  }\n  componentDidMount(){\n    var uri = 'https://api.npoint.io/1800ee5d52be1bdea4d6/' ;\n    \n   \n    fetch(uri)\n      .then(res => res.json())\n      .then(json => {\n          var children = json[this.state.currentNodeId].relations[0].children;  \n          var childNodes = children.map((id)=> {\n              return {\n                      \"id\" : id,\n                      \"title\": json[id].title\n                    }\n          });\n\n          this.setState({\n              isLoaded: true,\n              allNodes: json,\n              currentNode : json[this.state.currentNodeId],\n              childNodes: childNodes\n            }\n          );\n        }\n      );\n  }\n  getAddNodeComponent(){\n    if(this.state.addNodeOn)\n    return <AddNewNode handleAddNodeSubmit = {this.handleAddNodeSubmit}/>;\n  }\n  toggleAddNodeOn=()=>{\n    this.setState({\n      addNodeOn: !this.state.addNodeOn\n    });\n  }\n  getLoginButton = () =>{\n    const responseGoogle = (response) => {\n      var {googleId} = {response};\n      this.setState({\n        isLoggedIn:true\n      });\n      console.log(response.getBasicProfile().getEmail());\n    }\n    const logout = (response) => {\n      console.log(response);\n    }\n    if(this.state.isLoggedIn === false){\n      return (<GoogleLogin\n          clientId=\"1084512785168-9no6rgfvkralio08vd4k36fvc5c0gnsp.apps.googleusercontent.com\"\n          buttonText=\"Login\"\n          onSuccess={responseGoogle}\n          onFailure={responseGoogle}\n          cookiePolicy={'single_host_origin'}\n        />);\n    }\n    else{\n      return (<GoogleLogout\n          clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\n          buttonText=\"Logout\"\n          onLogoutSuccess={logout}\n        >\n        </GoogleLogout>);\n    }\n  }\n  render(){\n    var {currentNode,isLoaded,isLoggedIn} = this.state;\n    console.log(isLoggedIn);\n    console.log(this.state.store.getState())\n    if(isLoaded){\n      return (\n        <div className=\"App\" style = {{margin:'5%'}}>\n          <GoogleBtn store = {this.state.store} />\n          {isLoggedIn && (<div>\n            <button className=\"btn btn-primary m-2\" onClick = {this.openParentNode}>{\"<< parent \"}</button>\n            <div>\n              <Node node = {currentNode} childNodes = {this.state.childNodes} openNode = {this.openNode} addNewNode = {this.addNewNode}/>\n            </div>\n            <button className=\"btn btn-primary m-2\" onClick = {this.toggleAddNodeOn}>Add New Node</button>\n            {this.getAddNodeComponent()}\n          </div>)}\n        </div>\n      );\n    }\n    else{\n      return (\n      <div className=\"App\">\n        <h1> Loading...</h1>\n      </div>\n      );\n    }\n    \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport {createStore} from 'redux';\nimport allReducers from './reducers'\nimport {Provider,useSelector} from 'react-redux'\nimport {store,persistor} from './store'\nimport {PersistGate} from 'redux-persist/integration/react'\n\n// const store = createStore(allReducers,\n// \twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\n// store.dispatch({\n// \ttype: 'SIGN_IN',\n// \tpayload: {\n// \t\temailId: 'gmail'\n// \t}\n// });\n// store.dispatch({\n// \ttype: 'SIGN_OUT',\n// \tpayload: {\n// \t\temailId: 'bitsmail'\n// \t}\n// });\nconsole.log(store.getState().isLogged.isLoggedIn);\nReactDOM.render(\n  <Provider store = {store}>\n  \t<PersistGate loading = {<h1>loading..</h1>} persistor = {persistor}>\n    \t<App store = {store}/>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}